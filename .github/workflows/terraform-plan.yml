name: Terraform Plan

on:
  pull_request:
    branches:
      - master
    types:
      - labeled

jobs:
  terraform:
    if: github.event.label.name == 'CI:Terraform-Plan'
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Azure CLI
      run: |
        curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

    - name: Login to Azure CLI
      env:
        AZURE_CLIENT_ID: ${{ secrets.DOSPN_CLIENT_ID }}
        AZURE_CLIENT_SECRET: ${{ secrets.DOSPN_CLIENT_SECRET }}
        AZURE_TENANT_ID: ${{ secrets.DOSPN_TENANT_ID }}
      run: |
        az login --service-principal --username $AZURE_CLIENT_ID --password $AZURE_CLIENT_SECRET --tenant $AZURE_TENANT_ID

    - name: Verify Environment Variables
      env:
        DOSPN_CLIENT_ID: ${{ secrets.DOSPN_CLIENT_ID }}
        DOSPN_CLIENT_SECRET: ${{ secrets.DOSPN_CLIENT_SECRET }}
        DOSPN_TENANT_ID: ${{ secrets.DOSPN_TENANT_ID }}
        DOSPN_SUBSCRIPTION_ID: ${{ secrets.DOSPN_SUBSCRIPTION_ID }}
      run: |
        if [ -z "$DOSPN_CLIENT_ID" ]; then echo "DOSPN_CLIENT_ID is not set"; exit 1; fi
        if [ -z "$DOSPN_CLIENT_SECRET" ]; then echo "DOSPN_CLIENT_SECRET is not set"; exit 1; fi
        if [ -z "$DOSPN_TENANT_ID" ]; then echo "DOSPN_TENANT_ID is not set"; exit 1; fi
        if [ -z "$DOSPN_SUBSCRIPTION_ID" ]; then echo "DOSPN_SUBSCRIPTION_ID is not set"; exit 1; fi

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2

    - name: Terraform Init
      run: terraform init -input=false -no-color
      working-directory: ./terraform

    - name: Terraform Plan
      run: terraform plan \
        -var "client_id=${{ secrets.DOSPN_CLIENT_ID }}" \
        -var "client_secret=${{ secrets.DOSPN_CLIENT_SECRET }}" \
        -var "subscription_id=${{ secrets.DOSPN_SUBSCRIPTION_ID }}" \
        -var "tenant_id=${{ secrets.DOSPN_TENANT_ID }}" \
        -out=tfplan
      working-directory: ./terraform

    - name: Show Plan (Hiding Sensitive Information)
      run: terraform show -json tfplan | jq 'del(.planned_values.root_module.resources[] | select(.type == "azurerm_kubernetes_cluster") | .values.kube_config_raw)'
      working-directory: ./terraform
